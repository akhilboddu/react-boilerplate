{"version":3,"sources":["images/shape.svg","components/util/ScrollTop.js","components/pages/ML/coreAPI-ml/ArtSketch.js","components/pages/ML/coreAPI-ml/LinearRegression.js","components/pages/ML/coreAPI-ml/PolynomialRegression.js","components/pages/ML/coreAPI-ml/Polynomial-degree3.js","components/pages/ML/Regression.js","components/pages/ML/NeuralNetwork.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","children","Component","withRouter","ArtSketch","setup","createCanvas","draw","mouseIsPressed","fill","ellipse","mouseX","mouseY","PolySketch","m","b","x_vals","y_vals","optimizer","tf","sgd","predict","x","mul","add","random","mousePressed","map","width","y","height","push","length","ys","minimize","pred","labels","sub","square","mean","background","stroke","strokeWeight","i","px","py","point","lineX","tensor_y","lineY","dataSync","dispose","x1","x2","y1","y2","line","PolynomialRegression","a","c","adam","xs","curveX","curveY","beginShape","noFill","vertex","endShape","d","pow","backgroundShape","require","defaultFormat","steps","Regression","state","activeStep","receivingAccount","termsChecked","loading","labelWidth","title","renderTitle","_this","renderSketch","react_default","createElement","style","marginBottom","Typography_default","variant","fontWeight","gutterBottom","className","classes","stepContainer","P5Wrapper_default","sketch","test","LinearRegression","Degree3","_this2","Fragment","CssBaseline_default","root","Grid_default","container","justify","spacing","alignItems","grid","item","stepGrid","Stepper_default","stepper","nonLinear","alternativeLabel","label","index","Step_default","key","StepButton_default","onClick","setState","smallContainer","Paper_default","paper","withStyles","theme","flexGrow","backgroundColor","palette","secondary","overflow","concat","backgroundSize","backgroundPosition","marginTop","padding","paddingBottom","margin","unit","bigContainer","logo","display","justifyContent","flexDirection","buttonBar","button","primary","backButton","marginRight","outlinedButtom","textTransform","textAlign","color","text","topInfo","formControl","selectEmpty","NeuralNetwork","console","log","model","hidden","dense","units","inputShape","activation","output","sgdOpt","compile","loss","meanSquaredError","config","shuffle","verbose","epochs","_train","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fit","sent","history","stop","apply","arguments","train","then","print","routes","BrowserRouter","ScrollTop","Switch","Route","exact","path","component","createMuiTheme","main","blue","indigo","App","styles","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e24da5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shape.14ab13a9.svg\";","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location.pathname !== prevProps.location.pathname) {\n        window.scrollTo(0, 0);\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  export default withRouter(ScrollToTop);\n","export default function ArtSketch (p) {\n  p.setup = function() {\n    p.createCanvas(640, 480);\n  }\n  \n  p.draw = function() {\n    if (p.mouseIsPressed) {\n      p.fill(0);\n    } else {\n      p.fill(255);\n    }\n    p.ellipse(p.mouseX, p.mouseY, 80, 80);\n  }\n};","/**\n * Linear regression using Tensorflow Core API\n * Using mean squared error\n * This is using Schotastic Gradient Descent\n */\nimport * as tf from '@tensorflow/tfjs';\n\nexport default function PolySketch (p) {\n    //1 the first thing is to add our dataset\n    let x_vals = [];\n    let y_vals = [];\n\n    // 2 get the variables for y=mx+b ready\n    let m, b;\n\n    // 4 optimizer with learning rate to minimize loss error\n    // stochastic gradient descent - minimizes error with time\n    const learningRate = 0.2;\n    const optimizer = tf.train.sgd(learningRate);\n\n    p.setup = function () {\n        p.createCanvas(640, 480);\n\n        // creating tensor - has to be variable because m and b change\n        // but data stays constant\n        m = tf.variable(tf.scalar(p.random(1)));\n        b = tf.variable(tf.scalar(p.random(1)));\n    }\n\n    // 5 loss function that takes in tensors\n    function loss(pred, labels) {\n        return pred.sub(labels).square().mean(); //mean squared error\n    }\n\n    // 3 need predict function, takes xvals and returns y tensor\n    function predict(x) {\n        const xs = tf.tensor1d(x); \n        // y = mx + b\n        const  ys = xs.mul(m).add(b);\n        return ys;\n    }\n\n    p.mousePressed = function() {\n        // mapping everything to 0 and 1, since the canvas drawing starts at 0,0 at top left.\n        let x = p.map(p.mouseX, 0, p.width, 0, 1); \n        let y = p.map(p.mouseY, 0, p.height, 1, 0);\n        x_vals.push(x);\n        y_vals.push(y);\n\n    }\n\n    p.draw = function() {\n        \n        tf.tidy(() => {\n            if(x_vals.length > 0) {\n                const ys = tf.tensor1d(y_vals);\n                optimizer.minimize(() => loss(predict(x_vals), ys));\n            }\n        })\n        \n        p.background(0);\n        \n        p.stroke(255);\n        p.strokeWeight(8);\n        for(let i = 0; i < x_vals.length; i++) {\n            let px = p.map(x_vals[i], 0, 1, 0, p.width); \n            let py = p.map(y_vals[i], 0, 1, p.height, 0);\n            p.point(px, py);\n        }\n\n        // drawing line between 0 and 1\n        const lineX = [0,1]\n        const tensor_y = tf.tidy(() => predict(lineX));\n        let lineY = tensor_y.dataSync();\n        tensor_y.dispose();\n\n        let x1 = p.map(lineX[0], 0, 1, 0, p.width);\n        let x2 = p.map(lineX[1], 0, 1, 0, p.width);\n        let y1 = p.map(lineY[0], 0, 1, p.height, 0);\n        let y2 = p.map(lineY[1], 0, 1, p.height, 0);\n        \n        p.strokeWeight(2);\n        p.line(x1, y1, x2, y2);\n    }\n};\n\n  ","/**\n * Linear regression using Tensorflow Core API\n * Using mean squared error\n * This is using Schotastic Gradient Descent\n */\nimport * as tf from '@tensorflow/tfjs';\n\nexport default function PolynomialRegression (p) {\n    //1 the first thing is to add our dataset\n    let x_vals = [];\n    let y_vals = [];\n\n    // 2 get the variables for y=mx+b ready\n    let a, b, c;\n\n    // 4 optimizer with learning rate to minimize loss error\n    // stochastic gradient descent - minimizes error with time\n    const learningRate = 0.2;\n    const optimizer = tf.train.adam(learningRate);\n\n    p.setup = function () {\n        p.createCanvas(640, 480);\n\n        // creating tensor - has to be variable because m and b change\n        // but data stays constant\n        a = tf.variable(tf.scalar(p.random(-1, 1)));\n        b = tf.variable(tf.scalar(p.random(-1, 1)));\n        c = tf.variable(tf.scalar(p.random(-1, 1)));\n    }\n\n    // 5 loss function that takes in tensors\n    function loss(pred, labels) {\n        return pred.sub(labels).square().mean(); //mean squared error \n    }\n\n    // 3 need predict function, takes xvals and returns y tensor\n    function predict(x) {\n        const xs = tf.tensor1d(x); \n        // y = ax^2 + bx + c\n        const  ys = xs.square().mul(a).add(xs.mul(b)).add(c);\n        return ys;\n    }\n\n    p.mousePressed = function() {\n        // mapping everything to 0 and 1, since the canvas drawing starts at 0,0 at top left.\n        let x = p.map(p.mouseX, 0, p.width, -1, 1); \n        let y = p.map(p.mouseY, 0, p.height, -1, 1);\n        x_vals.push(x);\n        y_vals.push(y);\n\n    }\n\n    p.draw = function() {\n        \n        tf.tidy(() => {\n            if(x_vals.length > 0) {\n                const ys = tf.tensor1d(y_vals);\n                optimizer.minimize(() => loss(predict(x_vals), ys));\n            }\n        })\n        \n        p.background(0);\n        \n        p.stroke(255);\n        p.strokeWeight(8);\n        for(let i = 0; i < x_vals.length; i++) {\n            let px = p.map(x_vals[i], -1, 1, 0, p.width); \n            let py = p.map(y_vals[i], 1, -1, p.height, 0);\n            p.point(px, py);\n        }\n\n        // drawing line between 0 and 1\n        const curveX = [];\n        for(let x = -1; x < 1; x += 0.05) {\n            curveX.push(x)\n        }\n        const tensor_y = tf.tidy(() => predict(curveX));\n        let curveY = tensor_y.dataSync();\n        tensor_y.dispose();\n\n        p.beginShape();\n        p.noFill();\n        p.stroke(255);\n        p.strokeWeight(2);\n\n        for(let i = 0; i < curveX.length; i++) {\n            let x = p.map(curveX[i], -1, 1, 0, p.width);\n            let y = p.map(curveY[i], -1, 1, 0, p.height);\n            p.vertex(x, y);\n        }\n        p.endShape();\n        \n    }\n};\n\n  ","/**\n * Linear regression using Tensorflow Core API\n * Using mean squared error\n * This is using Schotastic Gradient Descent\n */\nimport * as tf from '@tensorflow/tfjs';\n\nexport default function PolynomialRegression (p) {\n    //1 the first thing is to add our dataset\n    let x_vals = [];\n    let y_vals = [];\n\n    // 2 get the variables for y=mx+b ready\n    let a, b, c,d;\n\n    // 4 optimizer with learning rate to minimize loss error\n    // stochastic gradient descent - minimizes error with time\n    const learningRate = 0.4;\n    const optimizer = tf.train.adam(learningRate);\n\n    p.setup = function () {\n        p.createCanvas(640, 480);\n\n        // creating tensor - has to be variable because m and b change\n        // but data stays constant\n        a = tf.variable(tf.scalar(p.random(-1, 1)));\n        b = tf.variable(tf.scalar(p.random(-1, 1)));\n        c = tf.variable(tf.scalar(p.random(-1, 1)));\n        d = tf.variable(tf.scalar(p.random(-1, 1)));\n    }\n\n    // 5 loss function that takes in tensors\n    function loss(pred, labels) {\n        return pred.sub(labels).square().mean(); //mean squared error \n    }\n\n    // 3 need predict function, takes xvals and returns y tensor\n    function predict(x) {\n        const xs = tf.tensor1d(x); \n        // y = ax^3 + bx^2 + cx+d\n        const  ys = xs.pow(3).mul(a).add(xs.square().mul(b)).add(xs.mul(c)).add(d);\n        return ys;\n    }\n\n    p.mousePressed = function() {\n        // mapping everything to 0 and 1, since the canvas drawing starts at 0,0 at top left.\n        let x = p.map(p.mouseX, 0, p.width, -1, 1); \n        let y = p.map(p.mouseY, 0, p.height, -1, 1);\n        x_vals.push(x);\n        y_vals.push(y);\n\n    }\n\n    p.draw = function() {\n        \n        tf.tidy(() => {\n            if(x_vals.length > 0) {\n                const ys = tf.tensor1d(y_vals);\n                optimizer.minimize(() => loss(predict(x_vals), ys));\n            }\n        })\n        \n        p.background(0);\n        \n        p.stroke(255);\n        p.strokeWeight(8);\n        for(let i = 0; i < x_vals.length; i++) {\n            let px = p.map(x_vals[i], -1, 1, 0, p.width); \n            let py = p.map(y_vals[i], 1, -1, p.height, 0);\n            p.point(px, py);\n        }\n\n        // drawing line between 0 and 1\n        const curveX = [];\n        for(let x = -1; x < 1; x += 0.05) {\n            curveX.push(x)\n        }\n        const tensor_y = tf.tidy(() => predict(curveX));\n        let curveY = tensor_y.dataSync();\n        tensor_y.dispose();\n\n        p.beginShape();\n        p.noFill();\n        p.stroke(255);\n        p.strokeWeight(2);\n\n        for(let i = 0; i < curveX.length; i++) {\n            let x = p.map(curveX[i], -1, 1, 0, p.width);\n            let y = p.map(curveY[i], -1, 1, 0, p.height);\n            p.vertex(x, y);\n        }\n        p.endShape();\n        \n    }\n};\n\n  ","import React,  { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withRouter } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\n\nimport P5Wrapper from 'react-p5-wrapper';\nimport {\n  ArtSketch,\n  LinearRegression,\n  PolynomialRegression,\n  Degree3\n} from './coreAPI-ml'\n\nconst backgroundShape = require('../../../images/shape.svg');\n\n\nconst numeral = require('numeral');\nnumeral.defaultFormat('0');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary['A100'],\n    overflow: 'hidden',\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 10,\n    padding: 20,\n    paddingBottom: 500\n  },\n  grid: {\n    margin: `0 ${theme.spacing.unit * 2}px`\n  },\n  smallContainer: {\n    width: '60%'\n  },\n  bigContainer: {\n    width: '80%'\n  },\n  logo: {\n    marginBottom: 24,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  stepContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  stepGrid: {\n    width: '80%'\n  },\n  buttonBar: {\n    marginTop: 32,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: theme.palette.primary['A100']\n  },\n  backButton: {\n    marginRight: theme.spacing.unit,\n  },\n  outlinedButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing.unit\n  },\n  stepper: {\n    backgroundColor: 'transparent'\n  },\n  paper: {\n    padding: theme.spacing.unit * 3,\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  topInfo: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 42\n  },\n  formControl: {\n    width: '100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  }\n})\n\nconst steps = ['Art!','First Degree', 'Second Degree', 'Third Degree'];\n\nclass Regression extends Component {\n\n  state = {\n    activeStep: 0,\n    receivingAccount: '',\n    termsChecked: false,\n    loading: true,\n    labelWidth: 0,\n    title: 'Draw in the browser!'\n  }\n\n  renderTitle = () => {\n        if(this.state.activeStep === 0) {\n            return ('Draw in the browser!')\n        }\n        else {\n            return ('Polynomial Regression')\n        }\n      \n  }\n\n  renderSketch = () => {\n    if(this.state.activeStep === 0) {\n        return (\n            <div style={{marginBottom: 32}}>\n                <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}} gutterBottom>\n                    Art!\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                    Hover and drag over the screen below, and watch the magic happen.\n                </Typography>\n                <div className={this.props.classes.stepContainer}>\n                    <P5Wrapper sketch={ArtSketch} test=\"test\"/>\n                </div>\n            </div>\n        )\n    }\n    else if (this.state.activeStep === 1) {\n        return (\n            <div style={{marginBottom: 32}}>\n                <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}} gutterBottom>\n                    y = mx + c!\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                    Linear regression of degree 1\n                </Typography>\n                <div className={this.props.classes.stepContainer}>\n                    <P5Wrapper sketch={LinearRegression} />\n                </div>\n            </div>\n        )\n    }\n    else if (this.state.activeStep === 2) {\n        return (\n            <div style={{marginBottom: 32}}>\n                <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}} gutterBottom>\n                    y = ax^2 + bx + c!\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                    Polynomial regression of degree 2\n                </Typography>\n                <div className={this.props.classes.stepContainer}>\n                    <P5Wrapper sketch={PolynomialRegression} />\n                </div>\n            </div>\n        )\n    }\n    else if (this.state.activeStep === 3) {\n        return (\n            <div style={{marginBottom: 32}}>\n                <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}} gutterBottom>\n                    y = ax^2 + bx + c!\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                    Polynomial regression of degree 3\n                </Typography>\n                <div className={this.props.classes.stepContainer}>\n                    <P5Wrapper sketch={Degree3} />\n                </div>\n            </div>\n        )\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n              <Grid item xs={12}>\n                <div className={classes.stepContainer}>\n                    <Typography variant=\"h3\" gutterBottom>\n                        {this.renderTitle()}\n                    </Typography>\n                </div>\n                \n                <div className={classes.stepContainer}>\n                  <div className={classes.stepGrid}>\n                    <Stepper classes={{root: classes.stepper}} activeStep={activeStep} nonLinear alternativeLabel>\n                      {steps.map((label, index) => {\n                        return (\n                          <Step key={index}>\n                            <StepButton onClick={() => this.setState({activeStep: index})}>{label}</StepButton>\n                          </Step>\n                        );\n                      })}\n                    </Stepper>\n                  </div>\n                  \n                  <div className={classes.smallContainer}>\n                    <Paper className={classes.paper}>\n                      <div>\n                      {this.renderSketch()}\n                      </div>\n                    </Paper>\n                    </div>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Regression))\n","import React, { Component } from 'react'\nimport * as tf from '@tensorflow/tfjs'\n\nexport default class NeuralNetwork extends Component {\n    componentWillMount() {\n        console.log('here we are')\n\n        //this is the model\n        const model = tf.sequential()\n\n        //create hidden layer\n        //dense is a fully connected layer\n        const hidden = tf.layers.dense({\n            units: 4,       //num of nodes\n            inputShape: [2],//input batch (an array [ with arrays inside of 2 elements[a,b]])\n            activation: 'sigmoid'\n        });\n        model.add(hidden) //add to the model (Sequentially - feedforward sequential model)\n\n        //create another output - \n        const output = tf.layers.dense({\n            units: 1,\n            activation: 'sigmoid'\n        });\n        model.add(output)\n\n        //once configurations are complete, time to compile the model\n        const sgdOpt = tf.train.sgd(0.6)\n        model.compile({\n            optimizer: sgdOpt, //model then needs to be compiled with an optimizer to reduce loss function\n            loss: tf.losses.meanSquaredError //and a kind of loss function\n        })\n\n        /** Model then needs to be Trained */\n        const xs = tf.tensor2d([\n            [1, 1],\n            [0.5, 0.5],\n            [0, 0]\n        ])\n        const ys = tf.tensor2d([\n            [0],\n            [0.5],\n            [1]\n        ])\n        const config = {\n            shuffle: true,\n            verbose: true,\n            epochs: 5\n        }\n        async function train() {\n            for(let i = 0; i < 10; i++){\n                let response = await model.fit(xs, ys, config);\n                console.log(response.history.loss[0])\n            }\n        }\n        train().then(() => {\n            /** Because of synchronous nature of tf, need to make predictions here */\n            console.log('Training Completed');\n            let outputs = model.predict(xs)\n            outputs.print()\n        })\n\n        \n    }\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n// import Dashboard from './components/templates/Dashboard'\n// import Wizard from './components/templates/Wizard'\n// import Cards from './components/templates/Cards'\n// import Main from './components/pages/Main'\n// import Signup from './components/templates/Signup'\nimport ScrollToTop from './components/util/ScrollTop'\nimport Regression from './components/pages/ML/Regression';\nimport NeuralNetwork from './components/pages/ML/NeuralNetwork'\n\nexport default props => (\n    <BrowserRouter>\n      <ScrollToTop>\n        <Switch>\n          <Route exact path='/core' component={ Regression } />\n          <Route exact path='/layers' component={ NeuralNetwork } />{/*\n          <Route exact path='/signup' component={ Signup } />\n          <Route exact path='/wizard' component={ Wizard } />\n          <Route exact path='/cards' component={ Cards } /> */}\n        </Switch>\n      </ScrollToTop>\n    </BrowserRouter>\n  )","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Routes from './routes'\nimport { blue, indigo } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: blue[900]\n    },\n    primary: {\n      main: indigo[700]\n    }\n  },\n});\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          <Routes />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}